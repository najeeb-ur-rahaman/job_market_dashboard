services:
  postgres:
    image: postgres:latest
    container_name: job-market-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5430:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - job-market-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow:
    image: apache/airflow:2.8.3
    container_name: job-market-airflow
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      # Project-specific variables
      ADZUNA_APP_ID: ${ADZUNA_APP_ID}
      ADZUNA_APP_KEY: ${ADZUNA_APP_KEY}
      PYTHONPATH: /opt/airflow
    volumes:
      - ./project:/opt/airflow/project
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - .:/opt/airflow
      - ./requirements.txt:/opt/airflow/requirements.txt
    ports:
      - 8080:8080
    networks:
      - job-market-network
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    command: >
      bash -c "
      pip install --no-cache-dir -r /opt/airflow/requirements.txt &&
      airflow db init &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
      (airflow scheduler &) &&
      airflow webserver
      "

  streamlit:
    image: python
    container_name: job-market-dashboard
    env_file:
      - .env
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - 8501:8501
    networks:
      - job-market-network
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
      pip install streamlit pandas sqlalchemy psycopg2-binary plotly &&
      streamlit run dashboard.py --server.address=0.0.0.0
      "

volumes:
  postgres_data:

networks:
  job-market-network:
